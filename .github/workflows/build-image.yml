name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '43 0 * * 6'

jobs:

  build-x64:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Cache mitmproxy
      uses: actions/cache@v3
      with:
        key : mitmproxy-${{ runner.arch }}
        path: |
          mitmproxy

    - name: Build mitmproxy
      run : |
        docker system prune -f
        ls -lad *
        if [ ! -d mitmproxy ]; then
          docker build -t dev -f Dockerfile.mitm .
          docker create --name dev dev
          docker cp dev:/opt/mitmproxy mitmproxy
        fi

    - uses: docker/build-push-action@v3
      name: Build and push
      with:
        platforms: linux/amd64
        tags: nmaguiar/netutils:build-x64


  build-arm64:

    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Cache mitmproxy
      uses: actions/cache@v3
      with:
        key : mitmproxy-${{ runner.arch }}
        path: |
          mitmproxy

    - name: Build mitmproxy
      run : |
        docker system prune -f
        ls -lad *
        if [ ! -d mitmproxy ]; then
          docker build -t dev -f Dockerfile.mitm .
          docker create --name dev dev
          docker cp dev:/opt/mitmproxy mitmproxy
        fi

    - uses: docker/build-push-action@v3
      name: Build and push
      with:
        platforms: linux/arm64
        tags: nmaguiar/netutils:build-arm64

  manifest:

    runs-on: ubuntu-latest
    needs  : [build-arm64, build-x64]
    steps  :
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Create and push multi-arch manifest
      run : |
        docker manifest create nmaguiar/netutils:build nmaguiar/netutils:build-x64 nmaguiar/netutils:build-arm64
        docker manifest push nmaguiar/netutils:build